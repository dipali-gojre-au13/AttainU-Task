Week 08 Day 01 CC


Q1. Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.

Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.

You may return any answer array that satisfies this condition.

--->
class Solution:
    def sortArrayByParityII(self, A: List[int]) -> List[int]:
        even =[a for a in A if a%2==0]
        odd =[a for a in A if a%2]
        result =[]
        for i in range(len(A)//2):
            result.append(even[i])
            result.append(odd[i])
        return result

OR

class Solution:
    def sortArrayByParityII(self, A: List[int]) -> List[int]:
        evenp,oddp=0,1
        result=[0]*len(A)
        for num in A:
            if num%2:
                result[oddp]=num
                oddp+=2
            else:
                result[evenp]=num
                evenp+=2
        return result

Output:
Input: [4,2,5,7]
Output: [4,5,2,7]

Q2.Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Follow up:

Could you solve this problem without using the library's sort function?
Could you come up with a one-pass algorithm using only O(1) constant space?
 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
-->
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        start = 0
        i = 0
        end = len(nums)-1
        while i<=end:
            if nums[i] ==2:
                temp = nums[end]
                nums[end] = nums[i]
                nums[i] = temp
                end-= 1
            elif nums[i]==1:
                i+= 1
            elif nums[i]==0:
                temp = nums[start]
                nums[start] = nums[i]
                nums[i] = temp
                start+= 1
                i+= 1

Output:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]


