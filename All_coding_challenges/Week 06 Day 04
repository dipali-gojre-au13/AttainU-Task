Q1.Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.
Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4
-->
from typing import List

nums = [-1,0,3,5,9,12]
target = 9

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        start, end = 0, len(nums) - 1
        while start <= end:
            mid = (start + end) // 2

            if target == nums[mid]:
                return mid

            if target < nums[mid]:
                end = mid - 1
            else:
                start = mid + 1
        return -1
    
if __name__ == '__main__' :
    sort_solution = Solution()
    print(sort_solution.search(nums, target))
    
 Output:
 4
 
 
 Q2.Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Example 1:

Input: [1,3,5,6], 5
Output: 2
 -->
 from typing import List

nums = [1,3,5,6]
target = 5

class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
         try:
            return nums.index(target)
         except:
            for i in range(len(nums)):
                print(" ", i)
                if nums[i] - target > 0:
                    return i
                else: 
                    print("hello", len(nums))
                    return len(nums)
if __name__ == '__main__' :
    sort_solution = Solution()
    print(sort_solution.searchInsert(nums, target))
    
 Output: 2
