Week 13 Day 01 CC

Q1.Longest Increasing Subsequence
Given an unsorted array of integers, find the length of longest increasing subsequence.

Example:

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 

-->
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        if len(nums)==0:
            return 0
        dp=[1]*len(nums)
        previous=[]
        for i in range(1,len(nums)):
            if nums[i]>nums[i-1]:
                n=len(previous)
                if n!=0:
                    for j in range(n-1,-1,-1):
                        if nums[previous[j]]>nums[i]:
                            dp[i]=max(dp[i-1]+1,dp[i])
                            break
                        dp[i]=max(dp[i-1]+1,dp[previous[j]]+1,dp[i])
                        previous.pop()
                else:
                    dp[i]=dp[i-1]+1
            elif nums[i]<nums[i-1]:
                previous.append(i-1)
                for j in range(i-1,-1,-1):
                    if nums[j]<nums[i]:
                        dp[i]=dp[j]+1
                        break
        return max(dp)

Output:

4