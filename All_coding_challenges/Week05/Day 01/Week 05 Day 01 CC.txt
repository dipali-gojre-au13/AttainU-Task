Week 05 Day 01 CC

Q1.Given the names and grades for each student in a class of  students, store them in a nested list and print the name(s) of any student(s) having the second lowest grade.

Note: If there are multiple students with the second lowest grade, order their names alphabetically and print each name on a new line.
-->
students = []
score_list = []
for _ in range(int(raw_input())):
    name = raw_input()
    score = float(raw_input())
    temp = []

    # name = input()
    # score = float(input())

    temp.append(name)
    temp.append(score)

    score_list.append(score)
    students.append(temp)

score_list = list(dict.fromkeys(score_list))
score_list.sort()

if len(students) >= 2:
    second_lowest_students = []
    second_lowest_score = score_list[1]

    for i in students:
        if second_lowest_score in i:
            # print(i[0])
            second_lowest_students.append(i[0])
        else:
            pass
    print('\n'.join(sorted(second_lowest_students, key=lambda second_lowest_students: second_lowest_students)))

else:
    print(students[0][0])

Output:

Input:
5
Harry
37.21
Berry
37.21
Tina
37.2
Akriti
41
Harsh
39

Output:
Berry
Harry

Q2.The provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.
-->
if __name__ == '__main__':
    n = int(raw_input())
    student_marks = {}
    for _ in range(n):
        line = raw_input().split()
        name, scores = line[0], line[1:]
        scores = map(float, scores)
        student_marks[name] = scores
    query_name = raw_input()
    print("{0:.2f}".format(round(sum(student_marks[query_name]) / len(student_marks[query_name]), 2)))

Output:

Input:
3
Krishna 67 68 69
Arjun 70 98 63
Malika 52 56 60
Malika

Output:
56.00